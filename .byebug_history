exit
lines_per_speaker.collect {|char| char[0] }
 lines_per_speaker = macbeth.parse_lines
cont
exit
macbeth.speeches.class.to_s
macbeth.speeches.class
exit
macbeth.speeches.any? {|speech| speech.name !="SPEECH"}
macbeth.speeches.any? {|speech| speech !="SPEECH"}
macbeth.speeches.first.name
macbeth.speeches.first
macbeth.speeches.all?
macbeth.speeches.all
macbeth.speeches.name
macbeth.speeches.class
macbeth.speeches
cont
@speeches
@speech
cont
exit
c["bye"]||= 4
c["bye"]||+= 1
c["bye"]
c["bye"]= 0 || c["bye"]+1
c["hi"]||=1
c["hi"]+=1
c = {}
b= []
b
b = {}
a.css("LINE").length
a.css("SPEAKER").text
a.css("SPEAKER").children.text
a.css("SPEAKER").children
a.css("SPEAKER").name
a.css("SPEAKER")
a.css("./SPEAKER")
a.children.name
a.children.first
a.children.fisr
a.children
a.xpath("./SPEECH")
a.xpath("./SPEECH").first
a.xpath("//SPEECH").first
a.xpath("//SPEECH")
a.xpath("SPEECH")
a.css("SPEECH")
a.name
a.first_element_child
a.node_name
a.node
a.nodes
a.children
a.methods
a = @speeches.first
@speeches.first
@speeches
